name: Run tests
on:
  pull_request:
    branches: [master]
  merge_group:
    types: [checks_requested]
    branches: [master]
  workflow_dispatch:
    inputs:
      runners:
        description: "Runners to test on"
        type: choice
        options:
          - "ubuntu-22.04"
        default: "ubuntu-22.04"

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.1 # v3.0.1
        # FIXME Flip this off once we get to less than a couple hundred. Adding
        # this so it will only run against changed files. It'll make it much
        # easier to fix these as they come up rather than everything at once.
        with:
          extra_args: "--all-files"

  prettier:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4 # v4

      - name: Install NodeJS
        uses: actions/setup-node@v4 # v4
        with:
          node-version: "20"

      - name: Install Prettier
        run: npm install -g prettier@3.2.5

      - name: Run Prettier --check
        run: prettier --check .

  editorconfig:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4 # v4

      - uses: actions/setup-node@v4 # v4
        with:
          node-version: "20"

      - name: Install editorconfig-checker
        run: npm install -g editorconfig-checker

      - name: Run ECLint check
        run: editorconfig-checker -exclude README.md $(git ls-files | grep -v test)

  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-22.04
    outputs:
      # Expose detected tags as 'modules' and 'workflows' output variables
      paths: ${{ steps.list.outputs.components }}
      modules: ${{ steps.outputs.outputs.modules }}
      subworkflows: ${{ steps.outputs.outputs.subworkflows}}
      # Prod for version bumping

    steps:
      - uses: actions/checkout@v4 # v4
        with:
          fetch-depth: 0

      - name: List nf-test files
        id: list
        uses: adamrtalbot/detect-nf-test-changes@v0.0.4 # v0.0.4
        with:
          head: ${{ github.sha }}
          base: ${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}
          n_parents: 2

      - name: Separate modules and subworkflows
        id: outputs
        run: |
          echo modules=$(echo '${{ steps.list.outputs.components }}' | jq -c '. | map(select(contains("modules"))) | map(gsub("modules/nf-core/"; ""))') >> $GITHUB_OUTPUT
          echo subworkflows=$(echo '${{ steps.list.outputs.components }}' | jq '. | map(select(contains("subworkflows"))) | map(gsub("subworkflows/nf-core/"; ""))') >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.outputs.outputs.modules }}
          echo ${{ steps.outputs.outputs.subworkflows }}

  nf-core-lint-modules:
    runs-on: ${{ github.event.inputs.runners  || 'ubuntu-22.04' }}
    name: nf-core-lint-modules
    needs: [nf-test-changes]
    if: ${{ ( needs.nf-test-changes.outputs.modules != '[]') }}
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.modules) }}"]
    steps:
      - uses: actions/checkout@v4 # v4

      - name: Set up Python
        uses: actions/setup-python@v5 # v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4 # v4
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Install pip
        run: python -m pip install --upgrade pip

      - uses: actions/setup-java@v4 # v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Lint module ${{ matrix.tags }}
        run: nf-core modules lint -k environment_yml -k main_nf -k module_deprecations -k module_tests -k module_todos ${{ matrix.tags }}

  nf-core-lint-subworkflows:
    runs-on: ubuntu-22.04
    name: nf-core-lint-modules
    needs: [nf-test-changes]
    if: ${{ ( needs.nf-test-changes.outputs.subworkflows != '[]') }}
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.subworkflows) }}"]
    steps:
      - uses: actions/checkout@v4 # v4

      - name: Set up Python
        uses: actions/setup-python@v5 # v5
        with:
          python-version: "3.11"

      - name: Install pip
        run: python -m pip install --upgrade pip

      - uses: actions/setup-java@v4 # v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2 # v2

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Lint module ${{ matrix.tags }}
        run: nf-core subworkflows lint -k main_nf -k subworkflow_tests -k subworkflow_todos ${{ matrix.tags }}

  nf-test:
    runs-on: ${{ github.event.inputs.runners  || 'ubuntu-22.04' }}
    name: nf-test
    needs: [nf-test-changes]
    if: ( needs.nf-test-changes.outputs.paths != '[]' )
    strategy:
      fail-fast: false
      matrix:
        path: ["${{ fromJson(needs.nf-test-changes.outputs.paths) }}"]
        profile: [conda, docker, singularity]
    env:
      NXF_ANSI_LOG: false
      NFTEST_VER: "0.9.0"
      SENTIEON_LICENSE_MESSAGE: ${{ secrets.SENTIEON_LICENSE_MESSAGE }}
      SENTIEON_ENCRYPTION_KEY: ${{ secrets.SENTIEON_ENCRYPTION_KEY }}

    steps:
      - uses: actions/checkout@v4 # v4

      - uses: actions/setup-java@v4 # v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-test
        uses: nf-core/setup-nf-test@v1
        with:
          version: ${{ env.NFTEST_VER }}

      - name: Setup apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@main

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        run: |
          mkdir -p $NXF_SINGULARITY_CACHEDIR
          mkdir -p $NXF_SINGULARITY_LIBRARYDIR

      - name: Set up Python
        uses: actions/setup-python@v5 # v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4 # v4
        id: cache-pip-pdiff
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pdiff
          restore-keys: |
            ${{ runner.os }}-pip-pdiff

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pdiff cryptography

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v3 # v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge,bioconda

      - name: Conda setup
        if: matrix.profile == 'conda'
        run: |
          conda clean -a
          conda install -n base conda-libmamba-solver
          conda config --set solver libmamba
          echo $(realpath $CONDA)/condabin >> $GITHUB_PATH
          echo $(realpath python) >> $GITHUB_PATH

      # Set up secrets
      - name: Set up nextflow secrets
        # TODO Only run if the tag includes `sentieon`
        if: env.SENTIEON_ENCRYPTION_KEY != null && env.SENTIEON_LICENSE_MESSAGE != null
        run: |
          nextflow secrets set SENTIEON_AUTH_DATA $(python3 tests/modules/nf-core/sentieon/license_message.py encrypt --key "${{ secrets.SENTIEON_ENCRYPTION_KEY }}" --message "${{ secrets.SENTIEON_LICENSE_MESSAGE }}")

      # Test the module
      - name: Run nf-test
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
          SENTIEON_LICSRVR_IP: ${{ secrets.SENTIEON_LICSRVR_IP }}
          SENTIEON_AUTH_MECH: "GitHub Actions - token"
        run: |
          NFT_WORKDIR=~ \
          nf-test test \
            --profile=${{ matrix.profile }} \
            --tap=test.tap \
            --verbose \
            ${{ matrix.path }}

      - uses: pcolby/tap-summary@v1 # v1
        with:
          path: >-
            test.tap

      - name: Clean up
        if: always()
        run: |
          sudo rm -rf /home/ubuntu/tests/

  confirm-pass:
    runs-on: ubuntu-22.04
    needs: [prettier, editorconfig, nf-core-lint-modules, nf-core-lint-subworkflows, nf-test-changes, nf-test]
    if: always()
    steps:
      - name: All tests ok
        if: ${{ success() || !contains(needs.*.result, 'failure') }}
        run: exit 0
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: debug-print
        if: always()
        run: |
          echo "toJSON(needs) = ${{ toJSON(needs) }}"
          echo "toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
